#!/bin/bash
clear
#--------[ DONO @DuckSSH_ofc ]-----------#
source ShellBot.sh
touch lista
[[ -z $1 ]] && {
    clear && echo "INFORME O TOKEN" && return 0
}
# Informa√ß√µes Server 2
ip_server2="SEU-IP-AQUI"
senha_server2="SUA-SENHA-AQUI"
# Informa√ß√µes Server 3
ip_server3="SEU-IP-AQUI"
senha_server3="SUA-SENHA-AQUI"
[[ ! -e RESET ]] && touch RESET
api_bot=$1
ShellBot.init --token "$api_bot" --monitor --flush
ShellBot.username

# - Funcao menu
menu() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o</b>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - Funcao acesso1
ACESSO1() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o</b>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - Funcao acesso1
acesso1() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o</b>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - Funcao acesso2
ACESSO2() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o</b>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - Funcao acesso2
acesso2() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o</b>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - Funcao acesso3
ACESSO3() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o<b/>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - Funcao acesso3
acesso3() {
    local msg
        msg+="<b>‚ö†Ô∏è | Estamos em manuten√ß√£o</b>\n\n"
msg+="O bot est√° em modo de manuten√ß√£o. Provavelmente isso aconteceu porque estamos fazendo melhorias em algum recurso do bot ou no bot em si.\n\n"
msg+="Volte mais tarde, provavelmente o bot estar√° ativo novamente at√© l√° :)\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard" \
        --parse_mode html
        return 0
}

# - funcao criar ssh
criarteste() {
   [[  $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ö†Ô∏è ATEN√á√ÉO: foi encontrado em nosso sistema que voc√™ ja gerou um login teste no premium.
 Caso queira adquirir um login de 30 dias digite ou clique em /acesso1"
      return 0
    }
    usuario=$(echo PBxyx$(( RANDOM% + 999 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='2'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
    chmod +x /etc/SSHPlus/userteste/$usuario.sh
    at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
    echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n        ‚úÖ Criado com sucesso ‚úÖ\n=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n            üë§ USUARIO: <code>$usuario</code>\n               üîë SENHA: <code>$senha</code>\n             ‚è∞ Expira em: $tempo Hora")\n=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n   ‚ÑπÔ∏è COMO CONECTAR A INTERNET\n=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n‚Ä¢ Abra o app que voc√™ instalou.\n‚Ä¢ Selecione sua operadora na tela.\n‚Ä¢ Digite o usu√°rio e a senha recebida no app.\n‚Ä¢ Ligue dados m√≥veis e Desligue Wi-fi\n‚Ä¢ Clique em Conectar.\n‚Ä¢ Deve aparecer Conex√£o Estabelecida.\n‚Ä¢ Se apareceu, va ao youtube e fa√ßa o teste.\n=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n   ‚ö†Ô∏è SIGA EXATAMENTE COMO DIZ\n=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n  üòç GOSTOU? DIGITE OU CLIQUE EM /ACESSO1"  \
    --parse_mode html
    return 0
}

# - funcao criar ssh 2
criarteste2() {
   [[ $(grep -wc ${callback_query_from_id} lista) != '0'  ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ö†Ô∏è ATEN√á√ÉO: foi encontrado em nosso sistema que voc√™ ja gerou um login teste no premium.
 Caso queira adquirir um login de 30 dias digite ou clique em /acesso1"
      return 0
    }
    usuario=$(echo teste$(( RANDOM% + 250 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='1'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    if sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 echo "ok" 1>/dev/null 2>/dev/null; then
		sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 << EOF
		useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario:space: /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
chmod +x /etc/SSHPlus/userteste/$usuario.sh
at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
EOF
	echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Criado com sucesso</b> ‚úÖ\n\nIP: $ip_server2\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n‚è≥ Expira em: $tempo Hora")" \
    --parse_mode html
    return 0
else
ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
	--text "$(echo -e Erro Tente novamente Mais tarde!)" \
	--parse_mode html
	return 0
fi
}

# - funcao criar ssh 3
criarteste3() {
	 [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ö†Ô∏è ATEN√á√ÉO: foi encontrado em nosso sistema que voc√™ ja gerou um login teste no premium.
 Caso queira adquirir um login de 30 dias digite ou clique em /acesso1"
      return 0
    }
    usuario=$(echo teste$(( RANDOM% + 250 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='1'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    if sshpass -p "$senha_server3" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server3 echo "ok" 1>/dev/null 2>/dev/null; then
		sshpass -p "$senha_server3" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server3 << EOF
		useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
chmod +x /etc/SSHPlus/userteste/$usuario.sh
at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
EOF
	echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Criado com sucesso</b> ‚úÖ\n\nIP: $ip_server3\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n‚è≥ Expira em: $tempo Hora")" \
    --parse_mode html
    return 0
else
ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
	--text "$(echo -e Erro Tente novamente Mais tarde!)" \
	--parse_mode html
	return 0
fi
}

#enviar app
enviarapp() {
    ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
        --text "‚ôªÔ∏è ENVIANDO... AGUARDE!"
    ShellBot.sendDocument --chat_id ${callback_query_message_chat_id} \
        --document "@/root/DuckInNET_V1.apk" \
    return 0
}

#informacoes usuario
infouser () {
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
	--text "$(echo -e "Nome:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nUser: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: ${message_from_id[$(ShellBot.ListUpdates)]} " \
	--parse_mode html
	return 0
}

unset botao1
botao1=''
ShellBot.InlineKeyboardButton --button 'botao1' --line 1 --text 'üáßüá∑ GERAR LOGIN DE 2h üáßüá∑' --callback_data 'gerarssh'
ShellBot.InlineKeyboardButton --button 'botao1' --line 2 --text '‚ö° BAIXAR APP ‚ö°' --callback_data 'appenviar'
ShellBot.InlineKeyboardButton --button 'botao1' --line 3 --text '‚ö†Ô∏è TERMOS ‚ö†Ô∏èÔ∏èÔ∏è' --callback_data '2' --url 't.me/termosducknet' # LINK CANAL
ShellBot.regHandleFunction --function criarteste --callback_data gerarssh
ShellBot.regHandleFunction --function criarteste2 --callback_data gerarssh2
ShellBot.regHandleFunction --function criarteste3 --callback_data gerarssh3
ShellBot.regHandleFunction --function enviarapp --callback_data appenviar
unset keyboard1
keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'botao1')"
while :; do
  [[  "$(date +%d)" != "$(cat RESET)"  ]] && {
   	echo $(date +%d) > RESET
   	echo ' ' > lista
   }
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates); do
    (
      ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
      comando=(${message_text[$id]})
    [[ "${comando[0]}" = "/menu"  || "${comando[0]}" = "/start"  ]] && menu
    [[ "${comando[0]}" = "/ACESSO1" ]] && acesso1
    [[ "${comando[0]}" = "/acesso1" ]] && acesso1 
    [[ "${comando[0]}" = "/ACESSO2" ]] && acesso2 
    [[ "${comando[0]}" = "/acesso2" ]] && acesso2 
    [[ "${comando[0]}" = "/ACESSO3" ]] && acesso3 
    [[ "${comando[0]}" = "/acesso3" ]] && acesso3
    ) &
  done
done
